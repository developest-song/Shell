조건문 비교 연산자
"문자열" = "문자열"
"문자열" != "문자열"
-n "문자열" // 문자열이 NULL이 아니면 참
-z "문자열" // 문자열이 NULL이면 참

수식 -eq 수식     // 두 수식이 같으면 참
수식 -ne 수식     // 두 수식이 같지 않으면 참
수식1 -gt 수식2   // 수식1이 크다면 참
수식1 -ge 수식2   // 수식1이 크거나 같으면 참
수식1 -lt 수식2   // 수식1이 작으면 참
수식1 -le 수식2   // 수식1이 작거나 같으면 참
!수식             // 수식이 거짓이라면 참

파일과 관련된 조건
-d 파일이름  // 파일이 디렉터리면 참
-e 파일이름  // 파일이 존재하면 참
-f 파일이름  // 파일이 일반 파일이면 참
-s 파일이름  // 파일 크기가 0이 아니면 참
-g 파일이름  // 파일에 set-group-id가 설정되면 참
-u 파일이름  // 파일에 set-user-id가 설정되면 참
-r 파일이름  // 파일이 읽기 가능 상태이면 참
-w 파일이름  // 파일이 쓰기 가능 상태이면 참
-x 파일이름  // 파일이 실행 가능 상태이면 참

set $(...) 
위치변수로 사용하고자 할때 사용

cut 
-b  ex) ls -l | cut -b5-10      // 특정 자리 출력
-c  ex) ls -l | cut -c2         // 해당 자리 출력
-d  ex) ls -l | cut -d월 -f2    // 인자로 받은 문자로 필드 구분(구획 문자는 단일문자여야 한다)
-f  (d와 함께 사용)              // 구분된 필드를 출력

tee
명령어와 결과를 화면과 파일로 동시에 출력하는 명령어
ex) who | tee -a tee.out 
-a : 파일에 이어서 쓰기
-i : 인터럽트 무시

awk
자료 처리 및 리포트 생성에 사용하는 프로그래밍 언어
awk [옵션] [/찾을문자열/] ['{명령어}'] 파일명
NF - 필드 개수
$(NF-1) - 마지막 전 필드
$0 - 모든 필드
$1 - 첫 번째 필드

ex)
echo | awk '{ print 3+2 }'                       # 산술 연산
cat /etc/passwd | awk /root/                     # 행단위 검색
awk /root/ /etc/passwd
ls -l test.out | awk '{print $9 " user is " $3}' # 위치변수로 문장만들기
find ~ -name "*.sh" | awk -F/ '{print $NF}'      # find한 것을 구분자를 사용해서 출력
awk -F: '/root/ {print $1}' /etc/passwd          # 구분자 사용 root가 포함된 행의 $1 뽑아내기
